name: OSMESA

on: [push]

jobs:

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: true
    steps:
      - name: Setup - CMake
        uses: lukka/get-cmake@latest

      - name: Checkout
        uses: actions/checkout@v4

      - name: Add github workspace to path
        # https://github.community/t/deprecated-add-path/136621
        run: echo "$ENV{GITHUB_WORKSPACE}" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Build Directory setup
        run: |
          cmake -E make_directory ./build

      - name: Configure
        shell: cmd
        run: |
          call "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          cmake -S . -B build

      - name: Build
        shell: cmd
        run: |
          call "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          cmake --build build --config Release

  windows_ninja:
    name: Windows Ninja build
    runs-on: windows-latest
    strategy:
      fail-fast: true
    steps:
      - name: Setup - CMake
        uses: lukka/get-cmake@latest

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Add cl.exe to PATH
        uses: ilammy/msvc-dev-cmd@v1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Add github workspace to path
        # https://github.community/t/deprecated-add-path/136621
        run: echo "$ENV{GITHUB_WORKSPACE}" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Build Directory setup
        shell: powershell
        run: |
          cmake -E make_directory ./build_ninja

      - name: Configure
        shell: powershell
        run: |
          cmake -G Ninja -DCMAKE_C_COMPILER="cl.exe" -DCMAKE_CXX_COMPILER="cl.exe"  -S . -B build_ninja

      - name: Build
        shell: powershell
        run: |
          cd build_ninja; ninja -j1 -v

  linux:
    name: Ubuntu Latest GCC
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Setup - CMake
        uses: lukka/get-cmake@latest

      - name: Setup - System
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          # Install X dev pkgs
          sudo apt-get install xserver-xorg-dev libx11-dev libxi-dev libxext-dev libfontconfig-dev
          # Install example dependency dev pkgs
          sudo apt-get install tcl-dev tk-dev libsdl2-dev
          # Cleanup
          sudo apt-get clean

      - name: Checkout
        uses: actions/checkout@v4

      - name: Directory setup
        run: |
          cmake -E make_directory ./build

      - name: Configure
        run: |
          export PATH=$ENV{GITHUB_WORKSPACE}:$PATH
          cmake -S . -G Ninja -B build

      - name: Build
        run: |
          export PATH=$ENV{GITHUB_WORKSPACE}:$PATH
          cmake --build build

  osx:
    name: macOS Latest Clang
    runs-on: macos-latest
    strategy:
      fail-fast: true
    steps:
      - name: Setup - CMake
        uses: lukka/get-cmake@latest

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Directory setup
        run: |
          cmake -E make_directory ./build

      - name: Configure
        run: |
          export PATH=$ENV{GITHUB_WORKSPACE}:$PATH
          export CC=clang
          export CXX=clang++
          cmake -S . -G Ninja -B build

      - name: Build
        run: |
          export PATH=$ENV{GITHUB_WORKSPACE}:$PATH
          cmake --build build

